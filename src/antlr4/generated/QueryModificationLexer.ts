// Generated from QueryModification.g4 by ANTLR 4.7.3-SNAPSHOT

import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';

export class QueryModificationLexer extends Lexer {
  public static readonly T__0 = 1;
  public static readonly T__1 = 2;
  public static readonly T__2 = 3;
  public static readonly T__3 = 4;
  public static readonly T__4 = 5;
  public static readonly T__5 = 6;
  public static readonly T__6 = 7;
  public static readonly T__7 = 8;
  public static readonly T__8 = 9;
  public static readonly T__9 = 10;
  public static readonly T__10 = 11;
  public static readonly T__11 = 12;
  public static readonly T__12 = 13;
  public static readonly T__13 = 14;
  public static readonly T__14 = 15;
  public static readonly T__15 = 16;
  public static readonly T__16 = 17;
  public static readonly T__17 = 18;
  public static readonly T__18 = 19;
  public static readonly T__19 = 20;
  public static readonly T__20 = 21;
  public static readonly T__21 = 22;
  public static readonly XSD_STRING = 23;
  public static readonly XSD_DECIMAL = 24;
  public static readonly XSD_DOUBLE = 25;
  public static readonly XSD_INTEGER = 26;
  public static readonly XSD_BOOLEAN = 27;
  public static readonly XSD_DATE = 28;
  public static readonly XSD_TIME = 29;
  public static readonly XSD_DATETIME = 30;
  public static readonly XSD_DURATION = 31;
  public static readonly XSD_MONTHDAY = 32;
  public static readonly AND = 33;
  public static readonly AS = 34;
  public static readonly ASC = 35;
  public static readonly DESC = 36;
  public static readonly FALSE = 37;
  public static readonly IN = 38;
  public static readonly NOT = 39;
  public static readonly OR = 40;
  public static readonly TRUE = 41;
  public static readonly IRI_REF = 42;
  public static readonly PNAME_NS = 43;
  public static readonly PNAME_LN = 44;
  public static readonly INTEGER = 45;
  public static readonly DECIMAL = 46;
  public static readonly DOUBLE = 47;
  public static readonly EXPONENT = 48;
  public static readonly STRING_LITERAL1 = 49;
  public static readonly STRING_LITERAL2 = 50;
  public static readonly ECHAR = 51;
  public static readonly EMPTY_PARENS = 52;
  public static readonly VARNAME = 53;
  public static readonly PN_PREFIX = 54;
  public static readonly PN_LOCAL = 55;
  public static readonly WS = 56;

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = [
    'DEFAULT_TOKEN_CHANNEL',
    'HIDDEN',
  ];

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ['DEFAULT_MODE'];

  public static readonly ruleNames: string[] = [
    'T__0',
    'T__1',
    'T__2',
    'T__3',
    'T__4',
    'T__5',
    'T__6',
    'T__7',
    'T__8',
    'T__9',
    'T__10',
    'T__11',
    'T__12',
    'T__13',
    'T__14',
    'T__15',
    'T__16',
    'T__17',
    'T__18',
    'T__19',
    'T__20',
    'T__21',
    'XSD_STRING',
    'XSD_DECIMAL',
    'XSD_DOUBLE',
    'XSD_INTEGER',
    'XSD_BOOLEAN',
    'XSD_DATE',
    'XSD_TIME',
    'XSD_DATETIME',
    'XSD_DURATION',
    'XSD_MONTHDAY',
    'AND',
    'AS',
    'ASC',
    'DESC',
    'FALSE',
    'IN',
    'NOT',
    'OR',
    'TRUE',
    'IRI_REF',
    'PNAME_NS',
    'PNAME_LN',
    'INTEGER',
    'DECIMAL',
    'DOUBLE',
    'EXPONENT',
    'STRING_LITERAL1',
    'STRING_LITERAL2',
    'ECHAR',
    'EMPTY_PARENS',
    'VARNAME',
    'PN_PREFIX',
    'PN_LOCAL',
    'PN_CHARS_U',
    'PN_CHARS',
    'PN_CHARS_BASE',
    'DIGIT',
    'WS',
  ];

  private static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "','",
    "'('",
    "')'",
    "'['",
    "']'",
    "'$'",
    "'>'",
    "'>='",
    "'<'",
    "'<='",
    "'='",
    "'!='",
    "'~'",
    "'~*'",
    "'!~'",
    "'!~*'",
    "'-'",
    "'!'",
    "'*'",
    "'/'",
    "'%'",
    "'+'",
    "'xsd:string'",
    "'xsd:decimal'",
    "'xsd:double'",
    "'xsd:integer'",
    "'xsd:boolean'",
    "'xsd:date'",
    "'xsd_time'",
    "'xsd_datetime'",
    "'xsd:duration'",
    "'xsd:monthday'",
  ];
  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    'XSD_STRING',
    'XSD_DECIMAL',
    'XSD_DOUBLE',
    'XSD_INTEGER',
    'XSD_BOOLEAN',
    'XSD_DATE',
    'XSD_TIME',
    'XSD_DATETIME',
    'XSD_DURATION',
    'XSD_MONTHDAY',
    'AND',
    'AS',
    'ASC',
    'DESC',
    'FALSE',
    'IN',
    'NOT',
    'OR',
    'TRUE',
    'IRI_REF',
    'PNAME_NS',
    'PNAME_LN',
    'INTEGER',
    'DECIMAL',
    'DOUBLE',
    'EXPONENT',
    'STRING_LITERAL1',
    'STRING_LITERAL2',
    'ECHAR',
    'EMPTY_PARENS',
    'VARNAME',
    'PN_PREFIX',
    'PN_LOCAL',
    'WS',
  ];
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    QueryModificationLexer._LITERAL_NAMES,
    QueryModificationLexer._SYMBOLIC_NAMES,
    []
  );

  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return QueryModificationLexer.VOCABULARY;
  }
  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(QueryModificationLexer._ATN, this);
  }

  // @Override
  public get grammarFileName(): string {
    return 'QueryModification.g4';
  }

  // @Override
  public get ruleNames(): string[] {
    return QueryModificationLexer.ruleNames;
  }

  // @Override
  public get serializedATN(): string {
    return QueryModificationLexer._serializedATN;
  }

  // @Override
  public get channelNames(): string[] {
    return QueryModificationLexer.channelNames;
  }

  // @Override
  public get modeNames(): string[] {
    return QueryModificationLexer.modeNames;
  }

  private static readonly _serializedATNSegments: number = 2;
  private static readonly _serializedATNSegment0: string =
    '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02:\u0228\b\x01' +
    '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
    '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
    '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
    '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
    '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04" +
    '+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04' +
    '4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04' +
    '=\t=\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03' +
    '\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n' +
    '\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F' +
    '\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11' +
    '\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16' +
    '\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18' +
    '\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19' +
    '\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A' +
    '\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A' +
    '\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B' +
    '\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C' +
    '\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D' +
    '\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E' +
    '\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F' +
    '\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F' +
    '\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03' +
    ' \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03' +
    '!\x03!\x03"\x03"\x03"\x03"\x03"\x03"\x03"\x03"\x05"\u012A\n"' +
    '\x03#\x03#\x03#\x03#\x05#\u0130\n#\x03$\x03$\x03$\x03$\x03$\x03$\x05$' +
    '\u0138\n$\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x05%\u0142\n%\x03&\x03' +
    "&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x05&\u014E\n&\x03'\x03'\x03" +
    "'\x03'\x05'\u0154\n'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x05(\u015D" +
    '\n(\x03)\x03)\x03)\x03)\x03)\x03)\x05)\u0165\n)\x03*\x03*\x03*\x03*\x03' +
    '*\x03*\x03*\x03*\x05*\u016F\n*\x03+\x03+\x03+\x07+\u0174\n+\f+\x0E+\u0177' +
    '\v+\x03+\x03+\x03,\x05,\u017C\n,\x03,\x03,\x03-\x03-\x03-\x03.\x05.\u0184' +
    '\n.\x03.\x06.\u0187\n.\r.\x0E.\u0188\x03/\x05/\u018C\n/\x03/\x06/\u018F' +
    '\n/\r/\x0E/\u0190\x03/\x03/\x07/\u0195\n/\f/\x0E/\u0198\v/\x03/\x05/\u019B' +
    '\n/\x03/\x03/\x06/\u019F\n/\r/\x0E/\u01A0\x05/\u01A3\n/\x030\x050\u01A6' +
    '\n0\x030\x060\u01A9\n0\r0\x0E0\u01AA\x030\x030\x070\u01AF\n0\f0\x0E0\u01B2' +
    '\v0\x030\x030\x030\x050\u01B7\n0\x030\x030\x060\u01BB\n0\r0\x0E0\u01BC' +
    '\x030\x030\x030\x050\u01C2\n0\x030\x060\u01C5\n0\r0\x0E0\u01C6\x030\x03' +
    '0\x050\u01CB\n0\x031\x031\x051\u01CF\n1\x031\x061\u01D2\n1\r1\x0E1\u01D3' +
    '\x032\x032\x032\x072\u01D9\n2\f2\x0E2\u01DC\v2\x032\x032\x033\x033\x03' +
    '3\x073\u01E3\n3\f3\x0E3\u01E6\v3\x033\x033\x034\x034\x034\x035\x035\x03' +
    '5\x036\x036\x056\u01F2\n6\x036\x036\x036\x076\u01F7\n6\f6\x0E6\u01FA\v' +
    '6\x037\x037\x037\x077\u01FF\n7\f7\x0E7\u0202\v7\x037\x057\u0205\n7\x03' +
    '8\x038\x058\u0209\n8\x038\x038\x078\u020D\n8\f8\x0E8\u0210\v8\x038\x05' +
    '8\u0213\n8\x039\x039\x059\u0217\n9\x03:\x03:\x03:\x05:\u021C\n:\x03;\x03' +
    ';\x03<\x03<\x03=\x06=\u0223\n=\r=\x0E=\u0224\x03=\x03=\x02\x02\x02>\x03' +
    '\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t' +
    '\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02' +
    "\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14'\x02\x15)\x02\x16+\x02\x17" +
    '-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F' +
    '=\x02 ?\x02!A\x02"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S' +
    '\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x02' +
    '6k\x027m\x028o\x029q\x02\x02s\x02\x02u\x02\x02w\x02\x02y\x02:\x03\x02' +
    '\f\t\x02$$>>@@^^``bb}\x7F\x04\x02GGgg\x04\x02--//\x06\x02\f\f\x0F\x0F' +
    '))^^\x06\x02\f\f\x0F\x0F$$^^\t\x02$$))ddhhppttvv\x05\x02\xB9\xB9\u0302' +
    '\u0371\u2041\u2042\x0F\x02C\\c|\xC2\xD8\xDA\xF8\xFA\u0301\u0372\u037F' +
    '\u0381\u2001\u200E\u200F\u2072\u2191\u2C02\u2FF1\u3003\uD801\uF902\uFDD1' +
    '\uFDF2\uFFFF\x03\x022;\x05\x02\v\f\x0E\x0F""\x02\u0258\x02\x03\x03\x02' +
    '\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02' +
    '\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02' +
    '\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02' +
    '\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02' +
    '\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02' +
    "\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02\x02\x02" +
    ')\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02' +
    '\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02' +
    '\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03' +
    '\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02' +
    '\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02' +
    'K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02' +
    '\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02' +
    '\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03' +
    '\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02' +
    '\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02' +
    'm\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x03{\x03\x02' +
    '\x02\x02\x05}\x03\x02\x02\x02\x07\x7F\x03\x02\x02\x02\t\x81\x03\x02\x02' +
    '\x02\v\x83\x03\x02\x02\x02\r\x85\x03\x02\x02\x02\x0F\x87\x03\x02\x02\x02' +
    '\x11\x89\x03\x02\x02\x02\x13\x8C\x03\x02\x02\x02\x15\x8E\x03\x02\x02\x02' +
    '\x17\x91\x03\x02\x02\x02\x19\x93\x03\x02\x02\x02\x1B\x96\x03\x02\x02\x02' +
    '\x1D\x98\x03\x02\x02\x02\x1F\x9B\x03\x02\x02\x02!\x9E\x03\x02\x02\x02' +
    "#\xA2\x03\x02\x02\x02%\xA4\x03\x02\x02\x02'\xA6\x03\x02\x02\x02)\xA8" +
    '\x03\x02\x02\x02+\xAA\x03\x02\x02\x02-\xAC\x03\x02\x02\x02/\xAE\x03\x02' +
    '\x02\x021\xB9\x03\x02\x02\x023\xC5\x03\x02\x02\x025\xD0\x03\x02\x02\x02' +
    '7\xDC\x03\x02\x02\x029\xE8\x03\x02\x02\x02;\xF1\x03\x02\x02\x02=\xFA\x03' +
    '\x02\x02\x02?\u0107\x03\x02\x02\x02A\u0114\x03\x02\x02\x02C\u0129\x03' +
    '\x02\x02\x02E\u012F\x03\x02\x02\x02G\u0137\x03\x02\x02\x02I\u0141\x03' +
    '\x02\x02\x02K\u014D\x03\x02\x02\x02M\u0153\x03\x02\x02\x02O\u015C\x03' +
    '\x02\x02\x02Q\u0164\x03\x02\x02\x02S\u016E\x03\x02\x02\x02U\u0170\x03' +
    '\x02\x02\x02W\u017B\x03\x02\x02\x02Y\u017F\x03\x02\x02\x02[\u0183\x03' +
    '\x02\x02\x02]\u01A2\x03\x02\x02\x02_\u01CA\x03\x02\x02\x02a\u01CC\x03' +
    '\x02\x02\x02c\u01D5\x03\x02\x02\x02e\u01DF\x03\x02\x02\x02g\u01E9\x03' +
    '\x02\x02\x02i\u01EC\x03\x02\x02\x02k\u01F1\x03\x02\x02\x02m\u01FB\x03' +
    '\x02\x02\x02o\u0208\x03\x02\x02\x02q\u0216\x03\x02\x02\x02s\u021B\x03' +
    '\x02\x02\x02u\u021D\x03\x02\x02\x02w\u021F\x03\x02\x02\x02y\u0222\x03' +
    '\x02\x02\x02{|\x07.\x02\x02|\x04\x03\x02\x02\x02}~\x07*\x02\x02~\x06\x03' +
    '\x02\x02\x02\x7F\x80\x07+\x02\x02\x80\b\x03\x02\x02\x02\x81\x82\x07]\x02' +
    '\x02\x82\n\x03\x02\x02\x02\x83\x84\x07_\x02\x02\x84\f\x03\x02\x02\x02' +
    '\x85\x86\x07&\x02\x02\x86\x0E\x03\x02\x02\x02\x87\x88\x07@\x02\x02\x88' +
    '\x10\x03\x02\x02\x02\x89\x8A\x07@\x02\x02\x8A\x8B\x07?\x02\x02\x8B\x12' +
    '\x03\x02\x02\x02\x8C\x8D\x07>\x02\x02\x8D\x14\x03\x02\x02\x02\x8E\x8F' +
    '\x07>\x02\x02\x8F\x90\x07?\x02\x02\x90\x16\x03\x02\x02\x02\x91\x92\x07' +
    '?\x02\x02\x92\x18\x03\x02\x02\x02\x93\x94\x07#\x02\x02\x94\x95\x07?\x02' +
    '\x02\x95\x1A\x03\x02\x02\x02\x96\x97\x07\x80\x02\x02\x97\x1C\x03\x02\x02' +
    '\x02\x98\x99\x07\x80\x02\x02\x99\x9A\x07,\x02\x02\x9A\x1E\x03\x02\x02' +
    '\x02\x9B\x9C\x07#\x02\x02\x9C\x9D\x07\x80\x02\x02\x9D \x03\x02\x02\x02' +
    '\x9E\x9F\x07#\x02\x02\x9F\xA0\x07\x80\x02\x02\xA0\xA1\x07,\x02\x02\xA1' +
    '"\x03\x02\x02\x02\xA2\xA3\x07/\x02\x02\xA3$\x03\x02\x02\x02\xA4\xA5\x07' +
    '#\x02\x02\xA5&\x03\x02\x02\x02\xA6\xA7\x07,\x02\x02\xA7(\x03\x02\x02\x02' +
    "\xA8\xA9\x071\x02\x02\xA9*\x03\x02\x02\x02\xAA\xAB\x07'\x02\x02\xAB," +
    '\x03\x02\x02\x02\xAC\xAD\x07-\x02\x02\xAD.\x03\x02\x02\x02\xAE\xAF\x07' +
    'z\x02\x02\xAF\xB0\x07u\x02\x02\xB0\xB1\x07f\x02\x02\xB1\xB2\x07<\x02\x02' +
    '\xB2\xB3\x07u\x02\x02\xB3\xB4\x07v\x02\x02\xB4\xB5\x07t\x02\x02\xB5\xB6' +
    '\x07k\x02\x02\xB6\xB7\x07p\x02\x02\xB7\xB8\x07i\x02\x02\xB80\x03\x02\x02' +
    '\x02\xB9\xBA\x07z\x02\x02\xBA\xBB\x07u\x02\x02\xBB\xBC\x07f\x02\x02\xBC' +
    '\xBD\x07<\x02\x02\xBD\xBE\x07f\x02\x02\xBE\xBF\x07g\x02\x02\xBF\xC0\x07' +
    'e\x02\x02\xC0\xC1\x07k\x02\x02\xC1\xC2\x07o\x02\x02\xC2\xC3\x07c\x02\x02' +
    '\xC3\xC4\x07n\x02\x02\xC42\x03\x02\x02\x02\xC5\xC6\x07z\x02\x02\xC6\xC7' +
    '\x07u\x02\x02\xC7\xC8\x07f\x02\x02\xC8\xC9\x07<\x02\x02\xC9\xCA\x07f\x02' +
    '\x02\xCA\xCB\x07q\x02\x02\xCB\xCC\x07w\x02\x02\xCC\xCD\x07d\x02\x02\xCD' +
    '\xCE\x07n\x02\x02\xCE\xCF\x07g\x02\x02\xCF4\x03\x02\x02\x02\xD0\xD1\x07' +
    'z\x02\x02\xD1\xD2\x07u\x02\x02\xD2\xD3\x07f\x02\x02\xD3\xD4\x07<\x02\x02' +
    '\xD4\xD5\x07k\x02\x02\xD5\xD6\x07p\x02\x02\xD6\xD7\x07v\x02\x02\xD7\xD8' +
    '\x07g\x02\x02\xD8\xD9\x07i\x02\x02\xD9\xDA\x07g\x02\x02\xDA\xDB\x07t\x02' +
    '\x02\xDB6\x03\x02\x02\x02\xDC\xDD\x07z\x02\x02\xDD\xDE\x07u\x02\x02\xDE' +
    '\xDF\x07f\x02\x02\xDF\xE0\x07<\x02\x02\xE0\xE1\x07d\x02\x02\xE1\xE2\x07' +
    'q\x02\x02\xE2\xE3\x07q\x02\x02\xE3\xE4\x07n\x02\x02\xE4\xE5\x07g\x02\x02' +
    '\xE5\xE6\x07c\x02\x02\xE6\xE7\x07p\x02\x02\xE78\x03\x02\x02\x02\xE8\xE9' +
    '\x07z\x02\x02\xE9\xEA\x07u\x02\x02\xEA\xEB\x07f\x02\x02\xEB\xEC\x07<\x02' +
    '\x02\xEC\xED\x07f\x02\x02\xED\xEE\x07c\x02\x02\xEE\xEF\x07v\x02\x02\xEF' +
    '\xF0\x07g\x02\x02\xF0:\x03\x02\x02\x02\xF1\xF2\x07z\x02\x02\xF2\xF3\x07' +
    'u\x02\x02\xF3\xF4\x07f\x02\x02\xF4\xF5\x07a\x02\x02\xF5\xF6\x07v\x02\x02' +
    '\xF6\xF7\x07k\x02\x02\xF7\xF8\x07o\x02\x02\xF8\xF9\x07g\x02\x02\xF9<\x03' +
    '\x02\x02\x02\xFA\xFB\x07z\x02\x02\xFB\xFC\x07u\x02\x02\xFC\xFD\x07f\x02' +
    '\x02\xFD\xFE\x07a\x02\x02\xFE\xFF\x07f\x02\x02\xFF\u0100\x07c\x02\x02' +
    '\u0100\u0101\x07v\x02\x02\u0101\u0102\x07g\x02\x02\u0102\u0103\x07v\x02' +
    '\x02\u0103\u0104\x07k\x02\x02\u0104\u0105\x07o\x02\x02\u0105\u0106\x07' +
    'g\x02\x02\u0106>\x03\x02\x02\x02\u0107\u0108\x07z\x02\x02\u0108\u0109' +
    '\x07u\x02\x02\u0109\u010A\x07f\x02\x02\u010A\u010B\x07<\x02\x02\u010B' +
    '\u010C\x07f\x02\x02\u010C\u010D\x07w\x02\x02\u010D\u010E\x07t\x02\x02' +
    '\u010E\u010F\x07c\x02\x02\u010F\u0110\x07v\x02\x02\u0110\u0111\x07k\x02' +
    '\x02\u0111\u0112\x07q\x02\x02\u0112\u0113\x07p\x02\x02\u0113@\x03\x02' +
    '\x02\x02\u0114\u0115\x07z\x02\x02\u0115\u0116\x07u\x02\x02\u0116\u0117' +
    '\x07f\x02\x02\u0117\u0118\x07<\x02\x02\u0118\u0119\x07o\x02\x02\u0119' +
    '\u011A\x07q\x02\x02\u011A\u011B\x07p\x02\x02\u011B\u011C\x07v\x02\x02' +
    '\u011C\u011D\x07j\x02\x02\u011D\u011E\x07f\x02\x02\u011E\u011F\x07c\x02' +
    '\x02\u011F\u0120\x07{\x02\x02\u0120B\x03\x02\x02\x02\u0121\u0122\x07C' +
    '\x02\x02\u0122\u0123\x07P\x02\x02\u0123\u012A\x07F\x02\x02\u0124\u0125' +
    '\x07c\x02\x02\u0125\u0126\x07p\x02\x02\u0126\u012A\x07f\x02\x02\u0127' +
    '\u0128\x07(\x02\x02\u0128\u012A\x07(\x02\x02\u0129\u0121\x03\x02\x02\x02' +
    '\u0129\u0124\x03\x02\x02\x02\u0129\u0127\x03\x02\x02\x02\u012AD\x03\x02' +
    '\x02\x02\u012B\u012C\x07C\x02\x02\u012C\u0130\x07U\x02\x02\u012D\u012E' +
    '\x07c\x02\x02\u012E\u0130\x07u\x02\x02\u012F\u012B\x03\x02\x02\x02\u012F' +
    '\u012D\x03\x02\x02\x02\u0130F\x03\x02\x02\x02\u0131\u0132\x07C\x02\x02' +
    '\u0132\u0133\x07U\x02\x02\u0133\u0138\x07E\x02\x02\u0134\u0135\x07c\x02' +
    '\x02\u0135\u0136\x07u\x02\x02\u0136\u0138\x07e\x02\x02\u0137\u0131\x03' +
    '\x02\x02\x02\u0137\u0134\x03\x02\x02\x02\u0138H\x03\x02\x02\x02\u0139' +
    '\u013A\x07F\x02\x02\u013A\u013B\x07G\x02\x02\u013B\u013C\x07U\x02\x02' +
    '\u013C\u0142\x07E\x02\x02\u013D\u013E\x07f\x02\x02\u013E\u013F\x07g\x02' +
    '\x02\u013F\u0140\x07u\x02\x02\u0140\u0142\x07e\x02\x02\u0141\u0139\x03' +
    '\x02\x02\x02\u0141\u013D\x03\x02\x02\x02\u0142J\x03\x02\x02\x02\u0143' +
    '\u0144\x07H\x02\x02\u0144\u0145\x07C\x02\x02\u0145\u0146\x07N\x02\x02' +
    '\u0146\u0147\x07U\x02\x02\u0147\u014E\x07G\x02\x02\u0148\u0149\x07h\x02' +
    '\x02\u0149\u014A\x07c\x02\x02\u014A\u014B\x07n\x02\x02\u014B\u014C\x07' +
    'u\x02\x02\u014C\u014E\x07g\x02\x02\u014D\u0143\x03\x02\x02\x02\u014D\u0148' +
    '\x03\x02\x02\x02\u014EL\x03\x02\x02\x02\u014F\u0150\x07K\x02\x02\u0150' +
    '\u0154\x07P\x02\x02\u0151\u0152\x07k\x02\x02\u0152\u0154\x07p\x02\x02' +
    '\u0153\u014F\x03\x02\x02\x02\u0153\u0151\x03\x02\x02\x02\u0154N\x03\x02' +
    '\x02\x02\u0155\u0156\x07P\x02\x02\u0156\u0157\x07Q\x02\x02\u0157\u015D' +
    '\x07V\x02\x02\u0158\u0159\x07p\x02\x02\u0159\u015A\x07q\x02\x02\u015A' +
    '\u015D\x07v\x02\x02\u015B\u015D\x07#\x02\x02\u015C\u0155\x03\x02\x02\x02' +
    '\u015C\u0158\x03\x02\x02\x02\u015C\u015B\x03\x02\x02\x02\u015DP\x03\x02' +
    '\x02\x02\u015E\u015F\x07Q\x02\x02\u015F\u0165\x07T\x02\x02\u0160\u0161' +
    '\x07q\x02\x02\u0161\u0165\x07t\x02\x02\u0162\u0163\x07~\x02\x02\u0163' +
    '\u0165\x07~\x02\x02\u0164\u015E\x03\x02\x02\x02\u0164\u0160\x03\x02\x02' +
    '\x02\u0164\u0162\x03\x02\x02\x02\u0165R\x03\x02\x02\x02\u0166\u0167\x07' +
    'V\x02\x02\u0167\u0168\x07T\x02\x02\u0168\u0169\x07W\x02\x02\u0169\u016F' +
    '\x07G\x02\x02\u016A\u016B\x07v\x02\x02\u016B\u016C\x07t\x02\x02\u016C' +
    '\u016D\x07w\x02\x02\u016D\u016F\x07g\x02\x02\u016E\u0166\x03\x02\x02\x02' +
    '\u016E\u016A\x03\x02\x02\x02\u016FT\x03\x02\x02\x02\u0170\u0175\x07>\x02' +
    '\x02\u0171\u0174\n\x02\x02\x02\u0172\u0174\x05s:\x02\u0173\u0171\x03\x02' +
    '\x02\x02\u0173\u0172\x03\x02\x02\x02\u0174\u0177\x03\x02\x02\x02\u0175' +
    '\u0173\x03\x02\x02\x02\u0175\u0176\x03\x02\x02\x02\u0176\u0178\x03\x02' +
    '\x02\x02\u0177\u0175\x03\x02\x02\x02\u0178\u0179\x07@\x02\x02\u0179V\x03' +
    '\x02\x02\x02\u017A\u017C\x05m7\x02\u017B\u017A\x03\x02\x02\x02\u017B\u017C' +
    '\x03\x02\x02\x02\u017C\u017D\x03\x02\x02\x02\u017D\u017E\x07<\x02\x02' +
    '\u017EX\x03\x02\x02\x02\u017F\u0180\x05W,\x02\u0180\u0181\x05o8\x02\u0181' +
    'Z\x03\x02\x02\x02\u0182\u0184\x07/\x02\x02\u0183\u0182\x03\x02\x02\x02' +
    '\u0183\u0184\x03\x02\x02\x02\u0184\u0186\x03\x02\x02\x02\u0185\u0187\x05' +
    'w<\x02\u0186\u0185\x03\x02\x02\x02\u0187\u0188\x03\x02\x02\x02\u0188\u0186' +
    '\x03\x02\x02\x02\u0188\u0189\x03\x02\x02\x02\u0189\\\x03\x02\x02\x02\u018A' +
    '\u018C\x07/\x02\x02\u018B\u018A\x03\x02\x02\x02\u018B\u018C\x03\x02\x02' +
    '\x02\u018C\u018E\x03\x02\x02\x02\u018D\u018F\x05w<\x02\u018E\u018D\x03' +
    '\x02\x02\x02\u018F\u0190\x03\x02\x02\x02\u0190\u018E\x03\x02\x02\x02\u0190' +
    '\u0191\x03\x02\x02\x02\u0191\u0192\x03\x02\x02\x02\u0192\u0196\x070\x02' +
    '\x02\u0193\u0195\x05w<\x02\u0194\u0193\x03\x02\x02\x02\u0195\u0198\x03' +
    '\x02\x02\x02\u0196\u0194\x03\x02\x02\x02\u0196\u0197\x03\x02\x02\x02\u0197' +
    '\u01A3\x03\x02\x02\x02\u0198\u0196\x03\x02\x02\x02\u0199\u019B\x07/\x02' +
    '\x02\u019A\u0199\x03\x02\x02\x02\u019A\u019B\x03\x02\x02\x02\u019B\u019C' +
    '\x03\x02\x02\x02\u019C\u019E\x070\x02\x02\u019D\u019F\x05w<\x02\u019E' +
    '\u019D\x03\x02\x02\x02\u019F\u01A0\x03\x02\x02\x02\u01A0\u019E\x03\x02' +
    '\x02\x02\u01A0\u01A1\x03\x02\x02\x02\u01A1\u01A3\x03\x02\x02\x02\u01A2' +
    '\u018B\x03\x02\x02\x02\u01A2\u019A\x03\x02\x02\x02\u01A3^\x03\x02\x02' +
    '\x02\u01A4\u01A6\x07/\x02\x02\u01A5\u01A4\x03\x02\x02\x02\u01A5\u01A6' +
    '\x03\x02\x02\x02\u01A6\u01A8\x03\x02\x02\x02\u01A7\u01A9\x05w<\x02\u01A8' +
    '\u01A7\x03\x02\x02\x02\u01A9\u01AA\x03\x02\x02\x02\u01AA\u01A8\x03\x02' +
    '\x02\x02\u01AA\u01AB\x03\x02\x02\x02\u01AB\u01AC\x03\x02\x02\x02\u01AC' +
    '\u01B0\x070\x02\x02\u01AD\u01AF\x05w<\x02\u01AE\u01AD\x03\x02\x02\x02' +
    '\u01AF\u01B2\x03\x02\x02\x02\u01B0\u01AE\x03\x02\x02\x02\u01B0\u01B1\x03' +
    '\x02\x02\x02\u01B1\u01B3\x03\x02\x02\x02\u01B2\u01B0\x03\x02\x02\x02\u01B3' +
    '\u01B4\x05a1\x02\u01B4\u01CB\x03\x02\x02\x02\u01B5\u01B7\x07/\x02\x02' +
    '\u01B6\u01B5\x03\x02\x02\x02\u01B6\u01B7\x03\x02\x02\x02\u01B7\u01B8\x03' +
    '\x02\x02\x02\u01B8\u01BA\x070\x02\x02\u01B9\u01BB\x05w<\x02\u01BA\u01B9' +
    '\x03\x02\x02\x02\u01BB\u01BC\x03\x02\x02\x02\u01BC\u01BA\x03\x02\x02\x02' +
    '\u01BC\u01BD\x03\x02\x02\x02\u01BD\u01BE\x03\x02\x02\x02\u01BE\u01BF\x05' +
    'a1\x02\u01BF\u01CB\x03\x02\x02\x02\u01C0\u01C2\x07/\x02\x02\u01C1\u01C0' +
    '\x03\x02\x02\x02\u01C1\u01C2\x03\x02\x02\x02\u01C2\u01C4\x03\x02\x02\x02' +
    '\u01C3\u01C5\x05w<\x02\u01C4\u01C3\x03\x02\x02\x02\u01C5\u01C6\x03\x02' +
    '\x02\x02\u01C6\u01C4\x03\x02\x02\x02\u01C6\u01C7\x03\x02\x02\x02\u01C7' +
    '\u01C8\x03\x02\x02\x02\u01C8\u01C9\x05a1\x02\u01C9\u01CB\x03\x02\x02\x02' +
    '\u01CA\u01A5\x03\x02\x02\x02\u01CA\u01B6\x03\x02\x02\x02\u01CA\u01C1\x03' +
    '\x02\x02\x02\u01CB`\x03\x02\x02\x02\u01CC\u01CE\t\x03\x02\x02\u01CD\u01CF' +
    '\t\x04\x02\x02\u01CE\u01CD\x03\x02\x02\x02\u01CE\u01CF\x03\x02\x02\x02' +
    '\u01CF\u01D1\x03\x02\x02\x02\u01D0\u01D2\x05w<\x02\u01D1\u01D0\x03\x02' +
    '\x02\x02\u01D2\u01D3\x03\x02\x02\x02\u01D3\u01D1\x03\x02\x02\x02\u01D3' +
    '\u01D4\x03\x02\x02\x02\u01D4b\x03\x02\x02\x02\u01D5\u01DA\x07)\x02\x02' +
    '\u01D6\u01D9\n\x05\x02\x02\u01D7\u01D9\x05g4\x02\u01D8\u01D6\x03\x02\x02' +
    '\x02\u01D8\u01D7\x03\x02\x02\x02\u01D9\u01DC\x03\x02\x02\x02\u01DA\u01D8' +
    '\x03\x02\x02\x02\u01DA\u01DB\x03\x02\x02\x02\u01DB\u01DD\x03\x02\x02\x02' +
    '\u01DC\u01DA\x03\x02\x02\x02\u01DD\u01DE\x07)\x02\x02\u01DEd\x03\x02\x02' +
    '\x02\u01DF\u01E4\x07$\x02\x02\u01E0\u01E3\n\x06\x02\x02\u01E1\u01E3\x05' +
    'g4\x02\u01E2\u01E0\x03\x02\x02\x02\u01E2\u01E1\x03\x02\x02\x02\u01E3\u01E6' +
    '\x03\x02\x02\x02\u01E4\u01E2\x03\x02\x02\x02\u01E4\u01E5\x03\x02\x02\x02' +
    '\u01E5\u01E7\x03\x02\x02\x02\u01E6\u01E4\x03\x02\x02\x02\u01E7\u01E8\x07' +
    '$\x02\x02\u01E8f\x03\x02\x02\x02\u01E9\u01EA\x07^\x02\x02\u01EA\u01EB' +
    '\t\x07\x02\x02\u01EBh\x03\x02\x02\x02\u01EC\u01ED\x07*\x02\x02\u01ED\u01EE' +
    '\x07+\x02\x02\u01EEj\x03\x02\x02\x02\u01EF\u01F2\x05q9\x02\u01F0\u01F2' +
    '\x05w<\x02\u01F1\u01EF\x03\x02\x02\x02\u01F1\u01F0\x03\x02\x02\x02\u01F2' +
    '\u01F8\x03\x02\x02\x02\u01F3\u01F7\x05q9\x02\u01F4\u01F7\x05w<\x02\u01F5' +
    '\u01F7\t\b\x02\x02\u01F6\u01F3\x03\x02\x02\x02\u01F6\u01F4\x03\x02\x02' +
    '\x02\u01F6\u01F5\x03\x02\x02\x02\u01F7\u01FA\x03\x02\x02\x02\u01F8\u01F6' +
    '\x03\x02\x02\x02\u01F8\u01F9\x03\x02\x02\x02\u01F9l\x03\x02\x02\x02\u01FA' +
    '\u01F8\x03\x02\x02\x02\u01FB\u0204\x05u;\x02\u01FC\u01FF\x05s:\x02\u01FD' +
    '\u01FF\x070\x02\x02\u01FE\u01FC\x03\x02\x02\x02\u01FE\u01FD\x03\x02\x02' +
    '\x02\u01FF\u0202\x03\x02\x02\x02\u0200\u01FE\x03\x02\x02\x02\u0200\u0201' +
    '\x03\x02\x02\x02\u0201\u0203\x03\x02\x02\x02\u0202\u0200\x03\x02\x02\x02' +
    '\u0203\u0205\x05s:\x02\u0204\u0200\x03\x02\x02\x02\u0204\u0205\x03\x02' +
    '\x02\x02\u0205n\x03\x02\x02\x02\u0206\u0209\x05q9\x02\u0207\u0209\x05' +
    'w<\x02\u0208\u0206\x03\x02\x02\x02\u0208\u0207\x03\x02\x02\x02\u0209\u0212' +
    '\x03\x02\x02\x02\u020A\u020D\x05s:\x02\u020B\u020D\x070\x02\x02\u020C' +
    '\u020A\x03\x02\x02\x02\u020C\u020B\x03\x02\x02\x02\u020D\u0210\x03\x02' +
    '\x02\x02\u020E\u020C\x03\x02\x02\x02\u020E\u020F\x03\x02\x02\x02\u020F' +
    '\u0211\x03\x02\x02\x02\u0210\u020E\x03\x02\x02\x02\u0211\u0213\x05s:\x02' +
    '\u0212\u020E\x03\x02\x02\x02\u0212\u0213\x03\x02\x02\x02\u0213p\x03\x02' +
    '\x02\x02\u0214\u0217\x05u;\x02\u0215\u0217\x07a\x02\x02\u0216\u0214\x03' +
    '\x02\x02\x02\u0216\u0215\x03\x02\x02\x02\u0217r\x03\x02\x02\x02\u0218' +
    '\u021C\x05q9\x02\u0219\u021C\x07/\x02\x02\u021A\u021C\x05w<\x02\u021B' +
    '\u0218\x03\x02\x02\x02\u021B\u0219\x03\x02\x02\x02\u021B\u021A\x03\x02' +
    '\x02\x02\u021Ct\x03\x02\x02\x02\u021D\u021E\t\t\x02\x02\u021Ev\x03\x02' +
    '\x02\x02\u021F\u0220';
  private static readonly _serializedATNSegment1: string =
    '\t\n\x02\x02\u0220x\x03\x02\x02\x02\u0221\u0223\t\v\x02\x02\u0222\u0221' +
    '\x03\x02\x02\x02\u0223\u0224\x03\x02\x02\x02\u0224\u0222\x03\x02\x02\x02' +
    '\u0224\u0225\x03\x02\x02\x02\u0225\u0226\x03\x02\x02\x02\u0226\u0227\b' +
    '=\x02\x02\u0227z\x03\x02\x02\x022\x02\u0129\u012F\u0137\u0141\u014D\u0153' +
    '\u015C\u0164\u016E\u0173\u0175\u017B\u0183\u0188\u018B\u0190\u0196\u019A' +
    '\u01A0\u01A2\u01A5\u01AA\u01B0\u01B6\u01BC\u01C1\u01C6\u01CA\u01CE\u01D3' +
    '\u01D8\u01DA\u01E2\u01E4\u01F1\u01F6\u01F8\u01FE\u0200\u0204\u0208\u020C' +
    '\u020E\u0212\u0216\u021B\u0224\x03\b\x02\x02';
  public static readonly _serializedATN: string = Utils.join(
    [
      QueryModificationLexer._serializedATNSegment0,
      QueryModificationLexer._serializedATNSegment1,
    ],
    ''
  );
  public static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!QueryModificationLexer.__ATN) {
      QueryModificationLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(QueryModificationLexer._serializedATN)
      );
    }

    return QueryModificationLexer.__ATN;
  }
}
