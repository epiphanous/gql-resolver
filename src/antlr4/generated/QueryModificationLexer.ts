// Generated from QueryModification.g4 by ANTLR 4.7.3-SNAPSHOT

import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';

export class QueryModificationLexer extends Lexer {
  public static readonly T__0 = 1;
  public static readonly T__1 = 2;
  public static readonly T__2 = 3;
  public static readonly T__3 = 4;
  public static readonly T__4 = 5;
  public static readonly T__5 = 6;
  public static readonly T__6 = 7;
  public static readonly T__7 = 8;
  public static readonly T__8 = 9;
  public static readonly T__9 = 10;
  public static readonly T__10 = 11;
  public static readonly T__11 = 12;
  public static readonly T__12 = 13;
  public static readonly T__13 = 14;
  public static readonly T__14 = 15;
  public static readonly T__15 = 16;
  public static readonly T__16 = 17;
  public static readonly T__17 = 18;
  public static readonly T__18 = 19;
  public static readonly T__19 = 20;
  public static readonly T__20 = 21;
  public static readonly T__21 = 22;
  public static readonly XSD_STRING = 23;
  public static readonly XSD_DECIMAL = 24;
  public static readonly XSD_DOUBLE = 25;
  public static readonly XSD_INTEGER = 26;
  public static readonly XSD_BOOLEAN = 27;
  public static readonly XSD_DATE = 28;
  public static readonly XSD_TIME = 29;
  public static readonly XSD_DATETIME = 30;
  public static readonly XSD_DURATION = 31;
  public static readonly XSD_MONTHDAY = 32;
  public static readonly AND = 33;
  public static readonly AS = 34;
  public static readonly ASC = 35;
  public static readonly BOOST = 36;
  public static readonly DESC = 37;
  public static readonly FALSE = 38;
  public static readonly IN = 39;
  public static readonly NOT = 40;
  public static readonly OF = 41;
  public static readonly OR = 42;
  public static readonly TRUE = 43;
  public static readonly IRI_REF = 44;
  public static readonly PNAME_NS = 45;
  public static readonly PNAME_LN = 46;
  public static readonly INTEGER = 47;
  public static readonly DECIMAL = 48;
  public static readonly DOUBLE = 49;
  public static readonly EXPONENT = 50;
  public static readonly STRING_LITERAL1 = 51;
  public static readonly STRING_LITERAL2 = 52;
  public static readonly ECHAR = 53;
  public static readonly EMPTY_PARENS = 54;
  public static readonly VARNAME = 55;
  public static readonly PN_PREFIX = 56;
  public static readonly PN_LOCAL = 57;
  public static readonly WS = 58;

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = [
    'DEFAULT_TOKEN_CHANNEL',
    'HIDDEN',
  ];

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ['DEFAULT_MODE'];

  public static readonly ruleNames: string[] = [
    'T__0',
    'T__1',
    'T__2',
    'T__3',
    'T__4',
    'T__5',
    'T__6',
    'T__7',
    'T__8',
    'T__9',
    'T__10',
    'T__11',
    'T__12',
    'T__13',
    'T__14',
    'T__15',
    'T__16',
    'T__17',
    'T__18',
    'T__19',
    'T__20',
    'T__21',
    'XSD_STRING',
    'XSD_DECIMAL',
    'XSD_DOUBLE',
    'XSD_INTEGER',
    'XSD_BOOLEAN',
    'XSD_DATE',
    'XSD_TIME',
    'XSD_DATETIME',
    'XSD_DURATION',
    'XSD_MONTHDAY',
    'AND',
    'AS',
    'ASC',
    'BOOST',
    'DESC',
    'FALSE',
    'IN',
    'NOT',
    'OF',
    'OR',
    'TRUE',
    'IRI_REF',
    'PNAME_NS',
    'PNAME_LN',
    'INTEGER',
    'DECIMAL',
    'DOUBLE',
    'EXPONENT',
    'STRING_LITERAL1',
    'STRING_LITERAL2',
    'ECHAR',
    'EMPTY_PARENS',
    'VARNAME',
    'PN_PREFIX',
    'PN_LOCAL',
    'PN_CHARS_U',
    'PN_CHARS',
    'PN_CHARS_BASE',
    'DIGIT',
    'WS',
  ];

  private static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "','",
    "'|'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'$'",
    "'>'",
    "'>='",
    "'<'",
    "'<='",
    "'='",
    "'!='",
    "'~'",
    "'~*'",
    "'!~'",
    "'!~*'",
    "'-'",
    "'+'",
    "'*'",
    "'/'",
    "'%'",
    "'xsd:string'",
    "'xsd:decimal'",
    "'xsd:double'",
    "'xsd:integer'",
    "'xsd:boolean'",
    "'xsd:date'",
    "'xsd_time'",
    "'xsd_datetime'",
    "'xsd:duration'",
    "'xsd:monthday'",
  ];
  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    'XSD_STRING',
    'XSD_DECIMAL',
    'XSD_DOUBLE',
    'XSD_INTEGER',
    'XSD_BOOLEAN',
    'XSD_DATE',
    'XSD_TIME',
    'XSD_DATETIME',
    'XSD_DURATION',
    'XSD_MONTHDAY',
    'AND',
    'AS',
    'ASC',
    'BOOST',
    'DESC',
    'FALSE',
    'IN',
    'NOT',
    'OF',
    'OR',
    'TRUE',
    'IRI_REF',
    'PNAME_NS',
    'PNAME_LN',
    'INTEGER',
    'DECIMAL',
    'DOUBLE',
    'EXPONENT',
    'STRING_LITERAL1',
    'STRING_LITERAL2',
    'ECHAR',
    'EMPTY_PARENS',
    'VARNAME',
    'PN_PREFIX',
    'PN_LOCAL',
    'WS',
  ];
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    QueryModificationLexer._LITERAL_NAMES,
    QueryModificationLexer._SYMBOLIC_NAMES,
    []
  );

  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return QueryModificationLexer.VOCABULARY;
  }
  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(QueryModificationLexer._ATN, this);
  }

  // @Override
  public get grammarFileName(): string {
    return 'QueryModification.g4';
  }

  // @Override
  public get ruleNames(): string[] {
    return QueryModificationLexer.ruleNames;
  }

  // @Override
  public get serializedATN(): string {
    return QueryModificationLexer._serializedATN;
  }

  // @Override
  public get channelNames(): string[] {
    return QueryModificationLexer.channelNames;
  }

  // @Override
  public get modeNames(): string[] {
    return QueryModificationLexer.modeNames;
  }

  private static readonly _serializedATNSegments: number = 2;
  private static readonly _serializedATNSegment0: string =
    '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02<\u023E\b\x01' +
    '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
    '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
    '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
    '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
    '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04" +
    '+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04' +
    '4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04' +
    '=\t=\x04>\t>\x04?\t?\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03' +
    '\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03' +
    '\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E' +
    '\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11' +
    '\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15' +
    '\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18' +
    '\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19' +
    '\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19' +
    '\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A' +
    '\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B' +
    '\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C' +
    '\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C' +
    '\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D' +
    '\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E' +
    '\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F' +
    '\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03' +
    ' \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03' +
    '!\x03!\x03!\x03!\x03!\x03"\x03"\x03"\x03"\x03"\x03"\x03"\x03"' +
    '\x05"\u012E\n"\x03#\x03#\x03#\x03#\x05#\u0134\n#\x03$\x03$\x03$\x03' +
    '$\x03$\x03$\x05$\u013C\n$\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x03' +
    '%\x03%\x05%\u0148\n%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x05&\u0152' +
    "\n&\x03'\x03'\x03'\x03'\x03'\x03'\x03'\x03'\x03'\x03'\x05'" +
    "\u015E\n'\x03(\x03(\x03(\x03(\x05(\u0164\n(\x03)\x03)\x03)\x03)\x03)" +
    '\x03)\x03)\x05)\u016D\n)\x03*\x03*\x03*\x03*\x05*\u0173\n*\x03+\x03+\x03' +
    '+\x03+\x03+\x03+\x05+\u017B\n+\x03,\x03,\x03,\x03,\x03,\x03,\x03,\x03' +
    ',\x05,\u0185\n,\x03-\x03-\x03-\x07-\u018A\n-\f-\x0E-\u018D\v-\x03-\x03' +
    '-\x03.\x05.\u0192\n.\x03.\x03.\x03/\x03/\x03/\x030\x050\u019A\n0\x030' +
    '\x060\u019D\n0\r0\x0E0\u019E\x031\x051\u01A2\n1\x031\x061\u01A5\n1\r1' +
    '\x0E1\u01A6\x031\x031\x071\u01AB\n1\f1\x0E1\u01AE\v1\x031\x051\u01B1\n' +
    '1\x031\x031\x061\u01B5\n1\r1\x0E1\u01B6\x051\u01B9\n1\x032\x052\u01BC' +
    '\n2\x032\x062\u01BF\n2\r2\x0E2\u01C0\x032\x032\x072\u01C5\n2\f2\x0E2\u01C8' +
    '\v2\x032\x032\x032\x052\u01CD\n2\x032\x032\x062\u01D1\n2\r2\x0E2\u01D2' +
    '\x032\x032\x032\x052\u01D8\n2\x032\x062\u01DB\n2\r2\x0E2\u01DC\x032\x03' +
    '2\x052\u01E1\n2\x033\x033\x053\u01E5\n3\x033\x063\u01E8\n3\r3\x0E3\u01E9' +
    '\x034\x034\x034\x074\u01EF\n4\f4\x0E4\u01F2\v4\x034\x034\x035\x035\x03' +
    '5\x075\u01F9\n5\f5\x0E5\u01FC\v5\x035\x035\x036\x036\x036\x037\x037\x03' +
    '7\x038\x038\x058\u0208\n8\x038\x038\x038\x078\u020D\n8\f8\x0E8\u0210\v' +
    '8\x039\x039\x039\x079\u0215\n9\f9\x0E9\u0218\v9\x039\x059\u021B\n9\x03' +
    ':\x03:\x05:\u021F\n:\x03:\x03:\x07:\u0223\n:\f:\x0E:\u0226\v:\x03:\x05' +
    ':\u0229\n:\x03;\x03;\x05;\u022D\n;\x03<\x03<\x03<\x05<\u0232\n<\x03=\x03' +
    '=\x03>\x03>\x03?\x06?\u0239\n?\r?\x0E?\u023A\x03?\x03?\x02\x02\x02@\x03' +
    '\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t' +
    '\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02' +
    "\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14'\x02\x15)\x02\x16+\x02\x17" +
    '-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F' +
    '=\x02 ?\x02!A\x02"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S' +
    '\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x02' +
    '6k\x027m\x028o\x029q\x02:s\x02;u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02' +
    '<\x03\x02\f\t\x02$$>>@@^^``bb}\x7F\x04\x02GGgg\x04\x02--//\x06\x02\f\f' +
    '\x0F\x0F))^^\x06\x02\f\f\x0F\x0F$$^^\t\x02$$))ddhhppttvv\x05\x02\xB9\xB9' +
    '\u0302\u0371\u2041\u2042\x0F\x02C\\c|\xC2\xD8\xDA\xF8\xFA\u0301\u0372' +
    '\u037F\u0381\u2001\u200E\u200F\u2072\u2191\u2C02\u2FF1\u3003\uD801\uF902' +
    '\uFDD1\uFDF2\uFFFF\x03\x022;\x05\x02\v\f\x0E\x0F""\x02\u0270\x02\x03' +
    '\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t' +
    '\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03' +
    '\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03' +
    '\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03' +
    '\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03' +
    "\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02" +
    '\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02' +
    '/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02' +
    '\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02' +
    '\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03' +
    '\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02' +
    '\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02' +
    'Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02' +
    '\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02' +
    '\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03' +
    '\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02' +
    '\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02' +
    's\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x03\x7F\x03\x02\x02\x02\x05\x81' +
    '\x03\x02\x02\x02\x07\x83\x03\x02\x02\x02\t\x85\x03\x02\x02\x02\v\x87\x03' +
    '\x02\x02\x02\r\x89\x03\x02\x02\x02\x0F\x8B\x03\x02\x02\x02\x11\x8D\x03' +
    '\x02\x02\x02\x13\x8F\x03\x02\x02\x02\x15\x92\x03\x02\x02\x02\x17\x94\x03' +
    '\x02\x02\x02\x19\x97\x03\x02\x02\x02\x1B\x99\x03\x02\x02\x02\x1D\x9C\x03' +
    '\x02\x02\x02\x1F\x9E\x03\x02\x02\x02!\xA1\x03\x02\x02\x02#\xA4\x03\x02' +
    "\x02\x02%\xA8\x03\x02\x02\x02'\xAA\x03\x02\x02\x02)\xAC\x03\x02\x02\x02" +
    '+\xAE\x03\x02\x02\x02-\xB0\x03\x02\x02\x02/\xB2\x03\x02\x02\x021\xBD\x03' +
    '\x02\x02\x023\xC9\x03\x02\x02\x025\xD4\x03\x02\x02\x027\xE0\x03\x02\x02' +
    '\x029\xEC\x03\x02\x02\x02;\xF5\x03\x02\x02\x02=\xFE\x03\x02\x02\x02?\u010B' +
    '\x03\x02\x02\x02A\u0118\x03\x02\x02\x02C\u012D\x03\x02\x02\x02E\u0133' +
    '\x03\x02\x02\x02G\u013B\x03\x02\x02\x02I\u0147\x03\x02\x02\x02K\u0151' +
    '\x03\x02\x02\x02M\u015D\x03\x02\x02\x02O\u0163\x03\x02\x02\x02Q\u016C' +
    '\x03\x02\x02\x02S\u0172\x03\x02\x02\x02U\u017A\x03\x02\x02\x02W\u0184' +
    '\x03\x02\x02\x02Y\u0186\x03\x02\x02\x02[\u0191\x03\x02\x02\x02]\u0195' +
    '\x03\x02\x02\x02_\u0199\x03\x02\x02\x02a\u01B8\x03\x02\x02\x02c\u01E0' +
    '\x03\x02\x02\x02e\u01E2\x03\x02\x02\x02g\u01EB\x03\x02\x02\x02i\u01F5' +
    '\x03\x02\x02\x02k\u01FF\x03\x02\x02\x02m\u0202\x03\x02\x02\x02o\u0207' +
    '\x03\x02\x02\x02q\u0211\x03\x02\x02\x02s\u021E\x03\x02\x02\x02u\u022C' +
    '\x03\x02\x02\x02w\u0231\x03\x02\x02\x02y\u0233\x03\x02\x02\x02{\u0235' +
    '\x03\x02\x02\x02}\u0238\x03\x02\x02\x02\x7F\x80\x07.\x02\x02\x80\x04\x03' +
    '\x02\x02\x02\x81\x82\x07~\x02\x02\x82\x06\x03\x02\x02\x02\x83\x84\x07' +
    '*\x02\x02\x84\b\x03\x02\x02\x02\x85\x86\x07+\x02\x02\x86\n\x03\x02\x02' +
    '\x02\x87\x88\x07]\x02\x02\x88\f\x03\x02\x02\x02\x89\x8A\x07_\x02\x02\x8A' +
    '\x0E\x03\x02\x02\x02\x8B\x8C\x07&\x02\x02\x8C\x10\x03\x02\x02\x02\x8D' +
    '\x8E\x07@\x02\x02\x8E\x12\x03\x02\x02\x02\x8F\x90\x07@\x02\x02\x90\x91' +
    '\x07?\x02\x02\x91\x14\x03\x02\x02\x02\x92\x93\x07>\x02\x02\x93\x16\x03' +
    '\x02\x02\x02\x94\x95\x07>\x02\x02\x95\x96\x07?\x02\x02\x96\x18\x03\x02' +
    '\x02\x02\x97\x98\x07?\x02\x02\x98\x1A\x03\x02\x02\x02\x99\x9A\x07#\x02' +
    '\x02\x9A\x9B\x07?\x02\x02\x9B\x1C\x03\x02\x02\x02\x9C\x9D\x07\x80\x02' +
    '\x02\x9D\x1E\x03\x02\x02\x02\x9E\x9F\x07\x80\x02\x02\x9F\xA0\x07,\x02' +
    '\x02\xA0 \x03\x02\x02\x02\xA1\xA2\x07#\x02\x02\xA2\xA3\x07\x80\x02\x02' +
    '\xA3"\x03\x02\x02\x02\xA4\xA5\x07#\x02\x02\xA5\xA6\x07\x80\x02\x02\xA6' +
    '\xA7\x07,\x02\x02\xA7$\x03\x02\x02\x02\xA8\xA9\x07/\x02\x02\xA9&\x03\x02' +
    '\x02\x02\xAA\xAB\x07-\x02\x02\xAB(\x03\x02\x02\x02\xAC\xAD\x07,\x02\x02' +
    '\xAD*\x03\x02\x02\x02\xAE\xAF\x071\x02\x02\xAF,\x03\x02\x02\x02\xB0\xB1' +
    "\x07'\x02\x02\xB1.\x03\x02\x02\x02\xB2\xB3\x07z\x02\x02\xB3\xB4\x07u" +
    '\x02\x02\xB4\xB5\x07f\x02\x02\xB5\xB6\x07<\x02\x02\xB6\xB7\x07u\x02\x02' +
    '\xB7\xB8\x07v\x02\x02\xB8\xB9\x07t\x02\x02\xB9\xBA\x07k\x02\x02\xBA\xBB' +
    '\x07p\x02\x02\xBB\xBC\x07i\x02\x02\xBC0\x03\x02\x02\x02\xBD\xBE\x07z\x02' +
    '\x02\xBE\xBF\x07u\x02\x02\xBF\xC0\x07f\x02\x02\xC0\xC1\x07<\x02\x02\xC1' +
    '\xC2\x07f\x02\x02\xC2\xC3\x07g\x02\x02\xC3\xC4\x07e\x02\x02\xC4\xC5\x07' +
    'k\x02\x02\xC5\xC6\x07o\x02\x02\xC6\xC7\x07c\x02\x02\xC7\xC8\x07n\x02\x02' +
    '\xC82\x03\x02\x02\x02\xC9\xCA\x07z\x02\x02\xCA\xCB\x07u\x02\x02\xCB\xCC' +
    '\x07f\x02\x02\xCC\xCD\x07<\x02\x02\xCD\xCE\x07f\x02\x02\xCE\xCF\x07q\x02' +
    '\x02\xCF\xD0\x07w\x02\x02\xD0\xD1\x07d\x02\x02\xD1\xD2\x07n\x02\x02\xD2' +
    '\xD3\x07g\x02\x02\xD34\x03\x02\x02\x02\xD4\xD5\x07z\x02\x02\xD5\xD6\x07' +
    'u\x02\x02\xD6\xD7\x07f\x02\x02\xD7\xD8\x07<\x02\x02\xD8\xD9\x07k\x02\x02' +
    '\xD9\xDA\x07p\x02\x02\xDA\xDB\x07v\x02\x02\xDB\xDC\x07g\x02\x02\xDC\xDD' +
    '\x07i\x02\x02\xDD\xDE\x07g\x02\x02\xDE\xDF\x07t\x02\x02\xDF6\x03\x02\x02' +
    '\x02\xE0\xE1\x07z\x02\x02\xE1\xE2\x07u\x02\x02\xE2\xE3\x07f\x02\x02\xE3' +
    '\xE4\x07<\x02\x02\xE4\xE5\x07d\x02\x02\xE5\xE6\x07q\x02\x02\xE6\xE7\x07' +
    'q\x02\x02\xE7\xE8\x07n\x02\x02\xE8\xE9\x07g\x02\x02\xE9\xEA\x07c\x02\x02' +
    '\xEA\xEB\x07p\x02\x02\xEB8\x03\x02\x02\x02\xEC\xED\x07z\x02\x02\xED\xEE' +
    '\x07u\x02\x02\xEE\xEF\x07f\x02\x02\xEF\xF0\x07<\x02\x02\xF0\xF1\x07f\x02' +
    '\x02\xF1\xF2\x07c\x02\x02\xF2\xF3\x07v\x02\x02\xF3\xF4\x07g\x02\x02\xF4' +
    ':\x03\x02\x02\x02\xF5\xF6\x07z\x02\x02\xF6\xF7\x07u\x02\x02\xF7\xF8\x07' +
    'f\x02\x02\xF8\xF9\x07a\x02\x02\xF9\xFA\x07v\x02\x02\xFA\xFB\x07k\x02\x02' +
    '\xFB\xFC\x07o\x02\x02\xFC\xFD\x07g\x02\x02\xFD<\x03\x02\x02\x02\xFE\xFF' +
    '\x07z\x02\x02\xFF\u0100\x07u\x02\x02\u0100\u0101\x07f\x02\x02\u0101\u0102' +
    '\x07a\x02\x02\u0102\u0103\x07f\x02\x02\u0103\u0104\x07c\x02\x02\u0104' +
    '\u0105\x07v\x02\x02\u0105\u0106\x07g\x02\x02\u0106\u0107\x07v\x02\x02' +
    '\u0107\u0108\x07k\x02\x02\u0108\u0109\x07o\x02\x02\u0109\u010A\x07g\x02' +
    '\x02\u010A>\x03\x02\x02\x02\u010B\u010C\x07z\x02\x02\u010C\u010D\x07u' +
    '\x02\x02\u010D\u010E\x07f\x02\x02\u010E\u010F\x07<\x02\x02\u010F\u0110' +
    '\x07f\x02\x02\u0110\u0111\x07w\x02\x02\u0111\u0112\x07t\x02\x02\u0112' +
    '\u0113\x07c\x02\x02\u0113\u0114\x07v\x02\x02\u0114\u0115\x07k\x02\x02' +
    '\u0115\u0116\x07q\x02\x02\u0116\u0117\x07p\x02\x02\u0117@\x03\x02\x02' +
    '\x02\u0118\u0119\x07z\x02\x02\u0119\u011A\x07u\x02\x02\u011A\u011B\x07' +
    'f\x02\x02\u011B\u011C\x07<\x02\x02\u011C\u011D\x07o\x02\x02\u011D\u011E' +
    '\x07q\x02\x02\u011E\u011F\x07p\x02\x02\u011F\u0120\x07v\x02\x02\u0120' +
    '\u0121\x07j\x02\x02\u0121\u0122\x07f\x02\x02\u0122\u0123\x07c\x02\x02' +
    '\u0123\u0124\x07{\x02\x02\u0124B\x03\x02\x02\x02\u0125\u0126\x07C\x02' +
    '\x02\u0126\u0127\x07P\x02\x02\u0127\u012E\x07F\x02\x02\u0128\u0129\x07' +
    'c\x02\x02\u0129\u012A\x07p\x02\x02\u012A\u012E\x07f\x02\x02\u012B\u012C' +
    '\x07(\x02\x02\u012C\u012E\x07(\x02\x02\u012D\u0125\x03\x02\x02\x02\u012D' +
    '\u0128\x03\x02\x02\x02\u012D\u012B\x03\x02\x02\x02\u012ED\x03\x02\x02' +
    '\x02\u012F\u0130\x07C\x02\x02\u0130\u0134\x07U\x02\x02\u0131\u0132\x07' +
    'c\x02\x02\u0132\u0134\x07u\x02\x02\u0133\u012F\x03\x02\x02\x02\u0133\u0131' +
    '\x03\x02\x02\x02\u0134F\x03\x02\x02\x02\u0135\u0136\x07C\x02\x02\u0136' +
    '\u0137\x07U\x02\x02\u0137\u013C\x07E\x02\x02\u0138\u0139\x07c\x02\x02' +
    '\u0139\u013A\x07u\x02\x02\u013A\u013C\x07e\x02\x02\u013B\u0135\x03\x02' +
    '\x02\x02\u013B\u0138\x03\x02\x02\x02\u013CH\x03\x02\x02\x02\u013D\u013E' +
    '\x07D\x02\x02\u013E\u013F\x07Q\x02\x02\u013F\u0140\x07Q\x02\x02\u0140' +
    '\u0141\x07U\x02\x02\u0141\u0148\x07V\x02\x02\u0142\u0143\x07d\x02\x02' +
    '\u0143\u0144\x07q\x02\x02\u0144\u0145\x07q\x02\x02\u0145\u0146\x07u\x02' +
    '\x02\u0146\u0148\x07v\x02\x02\u0147\u013D\x03\x02\x02\x02\u0147\u0142' +
    '\x03\x02\x02\x02\u0148J\x03\x02\x02\x02\u0149\u014A\x07F\x02\x02\u014A' +
    '\u014B\x07G\x02\x02\u014B\u014C\x07U\x02\x02\u014C\u0152\x07E\x02\x02' +
    '\u014D\u014E\x07f\x02\x02\u014E\u014F\x07g\x02\x02\u014F\u0150\x07u\x02' +
    '\x02\u0150\u0152\x07e\x02\x02\u0151\u0149\x03\x02\x02\x02\u0151\u014D' +
    '\x03\x02\x02\x02\u0152L\x03\x02\x02\x02\u0153\u0154\x07H\x02\x02\u0154' +
    '\u0155\x07C\x02\x02\u0155\u0156\x07N\x02\x02\u0156\u0157\x07U\x02\x02' +
    '\u0157\u015E\x07G\x02\x02\u0158\u0159\x07h\x02\x02\u0159\u015A\x07c\x02' +
    '\x02\u015A\u015B\x07n\x02\x02\u015B\u015C\x07u\x02\x02\u015C\u015E\x07' +
    'g\x02\x02\u015D\u0153\x03\x02\x02\x02\u015D\u0158\x03\x02\x02\x02\u015E' +
    'N\x03\x02\x02\x02\u015F\u0160\x07K\x02\x02\u0160\u0164\x07P\x02\x02\u0161' +
    '\u0162\x07k\x02\x02\u0162\u0164\x07p\x02\x02\u0163\u015F\x03\x02\x02\x02' +
    '\u0163\u0161\x03\x02\x02\x02\u0164P\x03\x02\x02\x02\u0165\u0166\x07P\x02' +
    '\x02\u0166\u0167\x07Q\x02\x02\u0167\u016D\x07V\x02\x02\u0168\u0169\x07' +
    'p\x02\x02\u0169\u016A\x07q\x02\x02\u016A\u016D\x07v\x02\x02\u016B\u016D' +
    '\x07#\x02\x02\u016C\u0165\x03\x02\x02\x02\u016C\u0168\x03\x02\x02\x02' +
    '\u016C\u016B\x03\x02\x02\x02\u016DR\x03\x02\x02\x02\u016E\u016F\x07Q\x02' +
    '\x02\u016F\u0173\x07H\x02\x02\u0170\u0171\x07q\x02\x02\u0171\u0173\x07' +
    'h\x02\x02\u0172\u016E\x03\x02\x02\x02\u0172\u0170\x03\x02\x02\x02\u0173' +
    'T\x03\x02\x02\x02\u0174\u0175\x07Q\x02\x02\u0175\u017B\x07T\x02\x02\u0176' +
    '\u0177\x07q\x02\x02\u0177\u017B\x07t\x02\x02\u0178\u0179\x07~\x02\x02' +
    '\u0179\u017B\x07~\x02\x02\u017A\u0174\x03\x02\x02\x02\u017A\u0176\x03' +
    '\x02\x02\x02\u017A\u0178\x03\x02\x02\x02\u017BV\x03\x02\x02\x02\u017C' +
    '\u017D\x07V\x02\x02\u017D\u017E\x07T\x02\x02\u017E\u017F\x07W\x02\x02' +
    '\u017F\u0185\x07G\x02\x02\u0180\u0181\x07v\x02\x02\u0181\u0182\x07t\x02' +
    '\x02\u0182\u0183\x07w\x02\x02\u0183\u0185\x07g\x02\x02\u0184\u017C\x03' +
    '\x02\x02\x02\u0184\u0180\x03\x02\x02\x02\u0185X\x03\x02\x02\x02\u0186' +
    '\u018B\x07>\x02\x02\u0187\u018A\n\x02\x02\x02\u0188\u018A\x05w<\x02\u0189' +
    '\u0187\x03\x02\x02\x02\u0189\u0188\x03\x02\x02\x02\u018A\u018D\x03\x02' +
    '\x02\x02\u018B\u0189\x03\x02\x02\x02\u018B\u018C\x03\x02\x02\x02\u018C' +
    '\u018E\x03\x02\x02\x02\u018D\u018B\x03\x02\x02\x02\u018E\u018F\x07@\x02' +
    '\x02\u018FZ\x03\x02\x02\x02\u0190\u0192\x05q9\x02\u0191\u0190\x03\x02' +
    '\x02\x02\u0191\u0192\x03\x02\x02\x02\u0192\u0193\x03\x02\x02\x02\u0193' +
    '\u0194\x07<\x02\x02\u0194\\\x03\x02\x02\x02\u0195\u0196\x05[.\x02\u0196' +
    '\u0197\x05s:\x02\u0197^\x03\x02\x02\x02\u0198\u019A\x07/\x02\x02\u0199' +
    '\u0198\x03\x02\x02\x02\u0199\u019A\x03\x02\x02\x02\u019A\u019C\x03\x02' +
    '\x02\x02\u019B\u019D\x05{>\x02\u019C\u019B\x03\x02\x02\x02\u019D\u019E' +
    '\x03\x02\x02\x02\u019E\u019C\x03\x02\x02\x02\u019E\u019F\x03\x02\x02\x02' +
    '\u019F`\x03\x02\x02\x02\u01A0\u01A2\x07/\x02\x02\u01A1\u01A0\x03\x02\x02' +
    '\x02\u01A1\u01A2\x03\x02\x02\x02\u01A2\u01A4\x03\x02\x02\x02\u01A3\u01A5' +
    '\x05{>\x02\u01A4\u01A3\x03\x02\x02\x02\u01A5\u01A6\x03\x02\x02\x02\u01A6' +
    '\u01A4\x03\x02\x02\x02\u01A6\u01A7\x03\x02\x02\x02\u01A7\u01A8\x03\x02' +
    '\x02\x02\u01A8\u01AC\x070\x02\x02\u01A9\u01AB\x05{>\x02\u01AA\u01A9\x03' +
    '\x02\x02\x02\u01AB\u01AE\x03\x02\x02\x02\u01AC\u01AA\x03\x02\x02\x02\u01AC' +
    '\u01AD\x03\x02\x02\x02\u01AD\u01B9\x03\x02\x02\x02\u01AE\u01AC\x03\x02' +
    '\x02\x02\u01AF\u01B1\x07/\x02\x02\u01B0\u01AF\x03\x02\x02\x02\u01B0\u01B1' +
    '\x03\x02\x02\x02\u01B1\u01B2\x03\x02\x02\x02\u01B2\u01B4\x070\x02\x02' +
    '\u01B3\u01B5\x05{>\x02\u01B4\u01B3\x03\x02\x02\x02\u01B5\u01B6\x03\x02' +
    '\x02\x02\u01B6\u01B4\x03\x02\x02\x02\u01B6\u01B7\x03\x02\x02\x02\u01B7' +
    '\u01B9\x03\x02\x02\x02\u01B8\u01A1\x03\x02\x02\x02\u01B8\u01B0\x03\x02' +
    '\x02\x02\u01B9b\x03\x02\x02\x02\u01BA\u01BC\x07/\x02\x02\u01BB\u01BA\x03' +
    '\x02\x02\x02\u01BB\u01BC\x03\x02\x02\x02\u01BC\u01BE\x03\x02\x02\x02\u01BD' +
    '\u01BF\x05{>\x02\u01BE\u01BD\x03\x02\x02\x02\u01BF\u01C0\x03\x02\x02\x02' +
    '\u01C0\u01BE\x03\x02\x02\x02\u01C0\u01C1\x03\x02\x02\x02\u01C1\u01C2\x03' +
    '\x02\x02\x02\u01C2\u01C6\x070\x02\x02\u01C3\u01C5\x05{>\x02\u01C4\u01C3' +
    '\x03\x02\x02\x02\u01C5\u01C8\x03\x02\x02\x02\u01C6\u01C4\x03\x02\x02\x02' +
    '\u01C6\u01C7\x03\x02\x02\x02\u01C7\u01C9\x03\x02\x02\x02\u01C8\u01C6\x03' +
    '\x02\x02\x02\u01C9\u01CA\x05e3\x02\u01CA\u01E1\x03\x02\x02\x02\u01CB\u01CD' +
    '\x07/\x02\x02\u01CC\u01CB\x03\x02\x02\x02\u01CC\u01CD\x03\x02\x02\x02' +
    '\u01CD\u01CE\x03\x02\x02\x02\u01CE\u01D0\x070\x02\x02\u01CF\u01D1\x05' +
    '{>\x02\u01D0\u01CF\x03\x02\x02\x02\u01D1\u01D2\x03\x02\x02\x02\u01D2\u01D0' +
    '\x03\x02\x02\x02\u01D2\u01D3\x03\x02\x02\x02\u01D3\u01D4\x03\x02\x02\x02' +
    '\u01D4\u01D5\x05e3\x02\u01D5\u01E1\x03\x02\x02\x02\u01D6\u01D8\x07/\x02' +
    '\x02\u01D7\u01D6\x03\x02\x02\x02\u01D7\u01D8\x03\x02\x02\x02\u01D8\u01DA' +
    '\x03\x02\x02\x02\u01D9\u01DB\x05{>\x02\u01DA\u01D9\x03\x02\x02\x02\u01DB' +
    '\u01DC\x03\x02\x02\x02\u01DC\u01DA\x03\x02\x02\x02\u01DC\u01DD\x03\x02' +
    '\x02\x02\u01DD\u01DE\x03\x02\x02\x02\u01DE\u01DF\x05e3\x02\u01DF\u01E1' +
    '\x03\x02\x02\x02\u01E0\u01BB\x03\x02\x02\x02\u01E0\u01CC\x03\x02\x02\x02' +
    '\u01E0\u01D7\x03\x02\x02\x02\u01E1d\x03\x02\x02\x02\u01E2\u01E4\t\x03' +
    '\x02\x02\u01E3\u01E5\t\x04\x02\x02\u01E4\u01E3\x03\x02\x02\x02\u01E4\u01E5' +
    '\x03\x02\x02\x02\u01E5\u01E7\x03\x02\x02\x02\u01E6\u01E8\x05{>\x02\u01E7' +
    '\u01E6\x03\x02\x02\x02\u01E8\u01E9\x03\x02\x02\x02\u01E9\u01E7\x03\x02' +
    '\x02\x02\u01E9\u01EA\x03\x02\x02\x02\u01EAf\x03\x02\x02\x02\u01EB\u01F0' +
    '\x07)\x02\x02\u01EC\u01EF\n\x05\x02\x02\u01ED\u01EF\x05k6\x02\u01EE\u01EC' +
    '\x03\x02\x02\x02\u01EE\u01ED\x03\x02\x02\x02\u01EF\u01F2\x03\x02\x02\x02' +
    '\u01F0\u01EE\x03\x02\x02\x02\u01F0\u01F1\x03\x02\x02\x02\u01F1\u01F3\x03' +
    '\x02\x02\x02\u01F2\u01F0\x03\x02\x02\x02\u01F3\u01F4\x07)\x02\x02\u01F4' +
    'h\x03\x02\x02\x02\u01F5\u01FA\x07$\x02\x02\u01F6\u01F9\n\x06\x02\x02\u01F7' +
    '\u01F9\x05k6\x02\u01F8\u01F6\x03\x02\x02\x02\u01F8\u01F7\x03\x02\x02\x02' +
    '\u01F9\u01FC\x03\x02\x02\x02\u01FA\u01F8\x03\x02\x02\x02\u01FA\u01FB\x03' +
    '\x02\x02\x02\u01FB\u01FD\x03\x02\x02\x02\u01FC\u01FA\x03\x02\x02\x02\u01FD' +
    '\u01FE\x07$\x02\x02\u01FEj\x03\x02\x02\x02\u01FF\u0200\x07^\x02\x02\u0200' +
    '\u0201\t\x07\x02\x02\u0201l\x03\x02\x02\x02\u0202\u0203\x07*\x02\x02\u0203' +
    '\u0204\x07+\x02\x02\u0204n\x03\x02\x02\x02\u0205\u0208\x05u;\x02\u0206' +
    '\u0208\x05{>\x02\u0207\u0205\x03\x02\x02\x02\u0207\u0206\x03\x02\x02\x02' +
    '\u0208\u020E\x03\x02\x02\x02\u0209\u020D\x05u;\x02\u020A\u020D\x05{>\x02' +
    '\u020B\u020D\t\b\x02\x02\u020C\u0209\x03\x02\x02\x02\u020C\u020A\x03\x02' +
    '\x02\x02\u020C\u020B\x03\x02\x02\x02\u020D\u0210\x03\x02\x02\x02\u020E' +
    '\u020C\x03\x02\x02\x02\u020E\u020F\x03\x02\x02\x02\u020Fp\x03\x02\x02' +
    '\x02\u0210\u020E\x03\x02\x02\x02\u0211\u021A\x05y=\x02\u0212\u0215\x05' +
    'w<\x02\u0213\u0215\x070\x02\x02\u0214\u0212\x03\x02\x02\x02\u0214\u0213' +
    '\x03\x02\x02\x02\u0215\u0218\x03\x02\x02\x02\u0216\u0214\x03\x02\x02\x02' +
    '\u0216\u0217\x03\x02\x02\x02\u0217\u0219\x03\x02\x02\x02\u0218\u0216\x03' +
    '\x02\x02\x02\u0219\u021B\x05w<\x02\u021A\u0216\x03\x02\x02\x02\u021A\u021B' +
    '\x03\x02\x02\x02\u021Br\x03\x02';
  private static readonly _serializedATNSegment1: string =
    '\x02\x02\u021C\u021F\x05u;\x02\u021D\u021F\x05{>\x02\u021E\u021C\x03\x02' +
    '\x02\x02\u021E\u021D\x03\x02\x02\x02\u021F\u0228\x03\x02\x02\x02\u0220' +
    '\u0223\x05w<\x02\u0221\u0223\x070\x02\x02\u0222\u0220\x03\x02\x02\x02' +
    '\u0222\u0221\x03\x02\x02\x02\u0223\u0226\x03\x02\x02\x02\u0224\u0222\x03' +
    '\x02\x02\x02\u0224\u0225\x03\x02\x02\x02\u0225\u0227\x03\x02\x02\x02\u0226' +
    '\u0224\x03\x02\x02\x02\u0227\u0229\x05w<\x02\u0228\u0224\x03\x02\x02\x02' +
    '\u0228\u0229\x03\x02\x02\x02\u0229t\x03\x02\x02\x02\u022A\u022D\x05y=' +
    '\x02\u022B\u022D\x07a\x02\x02\u022C\u022A\x03\x02\x02\x02\u022C\u022B' +
    '\x03\x02\x02\x02\u022Dv\x03\x02\x02\x02\u022E\u0232\x05u;\x02\u022F\u0232' +
    '\x07/\x02\x02\u0230\u0232\x05{>\x02\u0231\u022E\x03\x02\x02\x02\u0231' +
    '\u022F\x03\x02\x02\x02\u0231\u0230\x03\x02\x02\x02\u0232x\x03\x02\x02' +
    '\x02\u0233\u0234\t\t\x02\x02\u0234z\x03\x02\x02\x02\u0235\u0236\t\n\x02' +
    '\x02\u0236|\x03\x02\x02\x02\u0237\u0239\t\v\x02\x02\u0238\u0237\x03\x02' +
    '\x02\x02\u0239\u023A\x03\x02\x02\x02\u023A\u0238\x03\x02\x02\x02\u023A' +
    '\u023B\x03\x02\x02\x02\u023B\u023C\x03\x02\x02\x02\u023C\u023D\b?\x02' +
    '\x02\u023D~\x03\x02\x02\x024\x02\u012D\u0133\u013B\u0147\u0151\u015D\u0163' +
    '\u016C\u0172\u017A\u0184\u0189\u018B\u0191\u0199\u019E\u01A1\u01A6\u01AC' +
    '\u01B0\u01B6\u01B8\u01BB\u01C0\u01C6\u01CC\u01D2\u01D7\u01DC\u01E0\u01E4' +
    '\u01E9\u01EE\u01F0\u01F8\u01FA\u0207\u020C\u020E\u0214\u0216\u021A\u021E' +
    '\u0222\u0224\u0228\u022C\u0231\u023A\x03\b\x02\x02';
  public static readonly _serializedATN: string = Utils.join(
    [
      QueryModificationLexer._serializedATNSegment0,
      QueryModificationLexer._serializedATNSegment1,
    ],
    ''
  );
  public static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!QueryModificationLexer.__ATN) {
      QueryModificationLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(QueryModificationLexer._serializedATN)
      );
    }

    return QueryModificationLexer.__ATN;
  }
}
