import { CharStream, TokenStream } from 'antlr4ts';
import { Option } from 'funfix';
import { List, Map, Set } from 'immutable';
import { QueryModificationLexer } from '../../antlr4/generated/QueryModificationLexer';
import * as QMP from '../../antlr4/generated/QueryModificationParser';
import * as QME from '../../models/GQLObjectQueryModifierExpression';
import { GQLVariableDefinition } from '../../models/GQLVariableDefinition';
import { BuilderBase } from '../BuilderBase';
export declare abstract class GQLObjectQueryModifierBuilder extends BuilderBase<any> {
    result: any;
    PREFIXED_IRI_PATTERN: string;
    rPREFIXED_IRI_PATTERN: RegExp;
    validFields: Map<string, string>;
    validVariables: Set<GQLVariableDefinition>;
    vars: Map<any, string>;
    source: string;
    constructor(validFields: Map<string, string>, validVariables: Set<GQLVariableDefinition>, vars: Map<any, string>, prefixes: Set<string>, source: string);
    parser(tokenStream: TokenStream): QMP.QueryModificationParser;
    lexer(input: CharStream): QueryModificationLexer;
    simplifyConjunction(conjunction: QME.GQLObjectQueryModifierConjunction): QME.GQLObjectQueryModifierConjunction;
    simplifyDisjunction(disjunction: QME.GQLObjectQueryModifierDisjunction): QME.GQLObjectQueryModifierDisjunction;
    processSearchCondition(context: QMP.SearchConditionContext, isRoot?: boolean): QME.GQLObjectQueryModifierDisjunction;
    processSearchConditionAnd(context: QMP.SearchConditionAndContext): QME.GQLObjectQueryModifierConjunction;
    processSearchConditionNot(context: QMP.SearchConditionNotContext): QME.GQLObjectQueryModifierOptionalNegation;
    processPredicate(context: QMP.PredicateContext): QME.GQLObjectQueryModifierPredicate;
    processComparisonPredicate(context: QMP.ComparisonPredicateContext): QME.GQLObjectQueryModifierExpression;
    processInPredicate(context: QMP.InPredicateContext): QME.GQLObjectQueryModifierBasicExpression;
    processInVarPredicate(context: QMP.InVarPredicateContext): QME.GQLObjectQueryModifierBasicExpression;
    processParenPredicate(context: QMP.ParenPredicateContext): QME.GQLObjectQueryModifierParensExpression;
    processExpression(context: any): QME.GQLObjectQueryModifierExpression;
    processPrimitiveExpression(context: any): QME.GQLObjectQueryModifierPrimitiveExpression | QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processBuiltInCallAtom(context: QMP.BuiltinCallAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    NArgBuiltin(context: QMP.BuiltinCallContext, expressions: QMP.ExpressionContext[], name: string, inTypes: List<List<string>>, outType: string): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    oneArgBuiltin(context: QMP.BuiltinCallContext, expression: QMP.ExpressionContext, name: string, inTypes: List<string>, outType?: Option<string>): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    zeroArgBuiltin(context: QMP.BuiltinCallContext, name: string, outType: string): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processAbsFunction(context: QMP.AbsFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processBoundFunc(context: QMP.BoundFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processCeilFunc(context: QMP.CeilFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processCoalesceFunc(context: QMP.CoalesceFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processConcatFunc(context: QMP.ConcatFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processContainsFunc(context: QMP.ContainsFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processDatatypeFunc(context: QMP.DatatypeFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processDayFunc(context: QMP.DayFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processEncodeForUriFunc(context: QMP.EncodeForUriFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processExistsFunc(context: QMP.ExistsFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processFloorFunc(context: QMP.FloorFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processHoursFunc(context: QMP.HoursFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIfFunc(context: QMP.IfFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIriFunc(context: QMP.IriFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIsBlankFunc(context: QMP.IsBlankFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIsIriFunc(context: QMP.IsIriFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIsLiteralFunc(context: QMP.IsLiteralFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIsNumericFunc(context: QMP.IsNumericFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIsURIFunc(context: QMP.IsURIFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processLangFunc(context: QMP.LangFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processLangMatchesFunc(context: QMP.LangMatchesFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processLcaseFunc(context: QMP.LcaseFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processMd5Func(context: QMP.Md5FuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processMinutesFunc(context: QMP.MinutesFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processMonthFunc(context: QMP.MonthFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processNowFunc(context: QMP.NowFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processRandFunc(context: QMP.RandFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processRegexFunc(context: QMP.RegexFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processReplaceFunc(context: QMP.ReplaceFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processRoundFunc(context: QMP.RoundFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSameTermFunc(context: QMP.SameTermFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSecondsFunc(context: QMP.SecondsFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSha1Func(context: QMP.Sha1FuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSha256Func(context: QMP.Sha256FuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSha384Func(context: QMP.Sha384FuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSha512Func(context: QMP.Sha512FuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrFunc(context: QMP.StrFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrAfterFunc(context: QMP.StrAfterFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrBeforeFunc(context: QMP.StrBeforeFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrDtFunc(context: QMP.StrDtFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrEndsFunc(context: QMP.StrEndsFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrLangFunc(context: QMP.StrLangFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrLenFunc(context: QMP.StrLenFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrStartsFunc(context: QMP.StrStartsFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStrUuidFunc(context: QMP.StrUuidFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processSubstrFunc(context: QMP.SubstrFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processTimezoneFunc(context: QMP.TimezoneFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processTzFunc(context: QMP.TzFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processUcaseFunc(context: QMP.UcaseFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processUriFunc(context: QMP.UriFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processUuidFunc(context: QMP.UuidFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processYearFunc(context: QMP.YearFuncContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processFunctionCallAtom(context: QMP.FunctionCallAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processRdfLiteralAtom(context: QMP.RdfLiteralAtomContext): QME.GQLObjectQueryModifierPrimitiveExpression;
    processStringLiteralAtom(context: QMP.StringLiteralAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processStringLiteralOrVarRef(context: QMP.StringLiteralOrVarRefContext): string;
    processIriRefOrVarRef(context: QMP.IriRefOrVarRefContext): QME.GQLObjectQueryModifierBasicExpression | QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processNumericLiteralAtom(context: QMP.NumericLiteralAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processNumericLiteral(context: QMP.NumericLiteralContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processBooleanLiteralAtom(context: QMP.BooleanLiteralAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIriRefAtom(context: QMP.IriRefAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processIriRef(context: QMP.IriRefContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processFieldRefAtom(context: QMP.FieldRefAtomContext): QME.GQLObjectQueryModifierPrimitiveExpression;
    processFieldRef(context: QMP.FieldRefContext): QME.GQLObjectQueryModifierField;
    processVarRefAtom(context: QMP.VarRefAtomContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processVarRef(context: QMP.VarRefContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processFuncWithArgs(context: QMP.FuncWithArgsContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processFuncWithoutArgs(context: QMP.FuncWithoutArgsContext): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    quotedDataType(value: any, dataType: Option<string>): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    asDataType(value: any): QME.GQLObjectQueryModifierBasicPrimitiveExpression;
    processParenExpression(context: QMP.ParenExpressionContext): QME.GQLObjectQueryModifierBasicExpression;
    processUnaryExpression(context: QMP.UnaryExpressionContext): QME.GQLObjectQueryModifierBasicExpression;
    processFactorExpression(context: QMP.FactorExpressionContext): QME.GQLObjectQueryModifierBasicExpression;
    processTermExpression(context: QMP.TermExpressionContext): QME.GQLObjectQueryModifierBasicExpression;
    resolveTypes(t1: string, t2: string): string;
}
